webpackJsonp([0],{

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	__webpack_require__(3);
	module.exports = __webpack_require__(72);


/***/ },

/***/ 72:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(73), RootInstanceProvider = __webpack_require__(81), ReactMount = __webpack_require__(83), React = __webpack_require__(146); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	var React = __webpack_require__(146);
	var ReactDom = __webpack_require__(161);
	// let Hello = require('./hello/hello');
	// let CommentBox = require('./comment/comment-box');
	// let ProductSelect = require('./comment/product-select');
	// let MyComponent = require('./children/test');

	// let products = [
	//   {category: 'Sporting Goods', price: '$49.99', stocked: true, name: 'Football'},
	//   {category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball'},
	//   {category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball'},
	//   {category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch'},
	//   {category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5'},
	//   {category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7'}
	// ];

	// let Application = require('./chat3/views/Application.react');

	//let WebAPIUtils = require('./chat3/utils/WebAPIUtils');
	//
	//WebAPIUtils.initializeStreamOfTweets();

	var TodoApp = __webpack_require__(248);

	//let ChatApp = require('./chat/views/ChatApp.react');

	ReactDom.render(React.createElement(TodoApp, null), document.getElementById('content'));

	/* REACT HOT LOADER */ }).call(this); } finally { if (true) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(255); if (makeExportsHot(module, __webpack_require__(146))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "index.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))

/***/ },

/***/ 248:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(73), RootInstanceProvider = __webpack_require__(81), ReactMount = __webpack_require__(83), React = __webpack_require__(146); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	var React = __webpack_require__(146);
	var Header = __webpack_require__(249);
	var Footer = __webpack_require__(260);
	var MainSection = __webpack_require__(261);
	var TodoStore = __webpack_require__(263);

	function getTodoState() {
	    return {
	        allTodos: TodoStore.getAll(),
	        areAllComplete: TodoStore.areAllComplete()
	    };
	}

	var TodoApp = React.createClass({
	    displayName: 'TodoApp',


	    getInitialState: function getInitialState() {
	        return getTodoState();
	    },

	    componentDidMount: function componentDidMount() {
	        TodoStore.addChangeListener(this._onChange);
	    },

	    componentWillUnmount: function componentWillUnmount() {
	        TodoStore.removeChangeListener(this._onChange);
	    },

	    render: function render() {
	        return React.createElement(
	            'div',
	            null,
	            React.createElement(Header, null),
	            React.createElement(MainSection, {
	                allTodos: this.state.allTodos,
	                areAllComplete: this.state.areAllComplete }),
	            React.createElement(Footer, { allTodos: this.state.allTodos })
	        );
	    },

	    _onChange: function _onChange() {
	        this.setState(getTodoState);
	    }

	});

	module.exports = TodoApp;

	/* REACT HOT LOADER */ }).call(this); } finally { if (true) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(255); if (makeExportsHot(module, __webpack_require__(146))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "TodoApp.react.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))

/***/ },

/***/ 249:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(73), RootInstanceProvider = __webpack_require__(81), ReactMount = __webpack_require__(83), React = __webpack_require__(146); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	var React = __webpack_require__(146);
	var TodoActions = __webpack_require__(250);
	var TodoTextInput = __webpack_require__(259);

	var Header = React.createClass({
	    displayName: 'Header',

	    render: function render() {
	        return React.createElement(
	            'header',
	            { id: 'header' },
	            React.createElement(
	                'h1',
	                null,
	                'todos index'
	            ),
	            React.createElement(TodoTextInput, { id: 'new-todo', placeholder: 'What needs to be done?', onSave: this._onSave })
	        );
	    },

	    _onSave: function _onSave(text) {
	        if (text.trim()) {
	            TodoActions.create(text);
	        }
	    }
	});

	module.exports = Header;

	/* REACT HOT LOADER */ }).call(this); } finally { if (true) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(255); if (makeExportsHot(module, __webpack_require__(146))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "Header.react.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))

/***/ },

/***/ 250:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(73), RootInstanceProvider = __webpack_require__(81), ReactMount = __webpack_require__(83), React = __webpack_require__(146); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	var AppDispatcher = __webpack_require__(251);
	var TodoConstants = __webpack_require__(258);

	var TodoActions = {

	    create: function create(text) {
	        var action = {
	            actionType: TodoConstants.TODO_CREATE,
	            text: text
	        };
	        AppDispatcher.dispatch(action);
	    },

	    updateText: function updateText(id, text) {
	        var action = {
	            actionType: TodoConstants.TODO_UPDATE_TEXT,
	            id: id,
	            text: text
	        };
	        AppDispatcher.dispatch(action);
	    },

	    toggleComplete: function toggleComplete(todo) {
	        var id = todo.id;
	        var action = {
	            actionType: todo.complete ? TodoConstants.TODO_UNDO_COMPLETE : TodoConstants.TODO_COMPLETE,
	            id: id
	        };
	        AppDispatcher.dispatch(action);
	    },

	    toggleCompleteAll: function toggleCompleteAll() {
	        var action = {
	            actionType: TodoConstants.TODO_TOGGLE_COMPLETE_ALL
	        };
	        AppDispatcher.dispatch(action);
	    },

	    destroy: function destroy(id) {
	        var action = {
	            actionType: TodoConstants.TODO_DESTROY,
	            id: id
	        };
	        AppDispatcher.dispatch(action);
	    },

	    destroyCompleted: function destroyCompleted() {
	        var action = {
	            actionType: TodoConstants.TODO_DESTROY_COMPLETED
	        };
	        AppDispatcher.dispatch(action);
	    }

	};

	module.exports = TodoActions;

	/* REACT HOT LOADER */ }).call(this); } finally { if (true) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(255); if (makeExportsHot(module, __webpack_require__(146))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "TodoActions.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))

/***/ },

/***/ 251:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(73), RootInstanceProvider = __webpack_require__(81), ReactMount = __webpack_require__(83), React = __webpack_require__(146); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	var Dispatcher = __webpack_require__(252).Dispatcher;

	module.exports = new Dispatcher();

	/* REACT HOT LOADER */ }).call(this); } finally { if (true) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(255); if (makeExportsHot(module, __webpack_require__(146))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "AppDispatcher.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))

/***/ },

/***/ 258:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(73), RootInstanceProvider = __webpack_require__(81), ReactMount = __webpack_require__(83), React = __webpack_require__(146); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	module.exports = {
	    TODO_CREATE: 'TODO_CREATE',
	    TODO_UPDATE_TEXT: 'TODO_UPDATE_TEXT',
	    TODO_UNDO_COMPLETE: 'TODO_UNDO_COMPLETE',
	    TODO_COMPLETE: 'TODO_COMPLETE',
	    TODO_TOGGLE_COMPLETE_ALL: 'TODO_TOGGLE_COMPLETE_ALL',
	    TODO_DESTROY: 'TODO_DESTROY',
	    TODO_DESTROY_COMPLETED: 'TODO_DESTROY_COMPLETED'
	};

	/* REACT HOT LOADER */ }).call(this); } finally { if (true) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(255); if (makeExportsHot(module, __webpack_require__(146))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "TodoConstants.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))

/***/ },

/***/ 259:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(73), RootInstanceProvider = __webpack_require__(81), ReactMount = __webpack_require__(83), React = __webpack_require__(146); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	var React = __webpack_require__(146);
	// let TodoStore = require('../stores/TodoStore');
	var TodoActions = __webpack_require__(250);

	var TodoTextInput = React.createClass({
	    displayName: 'TodoTextInput',


	    getInitialState: function getInitialState() {
	        return {
	            inputValue: ''
	        };
	    },

	    handleInputValueChange: function handleInputValueChange(event) {
	        var inputValue = event.target.value;
	        this.setState({
	            inputValue: inputValue
	        });
	    },

	    handleFormSubmit: function handleFormSubmit(event) {
	        event.preventDefault();
	        TodoActions.create(this.state.inputValue);
	    },

	    render: function render() {

	        return React.createElement(
	            'form',
	            null,
	            React.createElement('input', { type: 'text', value: this.state.inputValue, onChange: this.handleInputValueChange }),
	            React.createElement('input', { type: 'submit', value: '提交', onClick: this.handleFormSubmit })
	        );
	    }

	});

	module.exports = TodoTextInput;

	/* REACT HOT LOADER */ }).call(this); } finally { if (true) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(255); if (makeExportsHot(module, __webpack_require__(146))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "TodoTextInput.react.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))

/***/ },

/***/ 260:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(73), RootInstanceProvider = __webpack_require__(81), ReactMount = __webpack_require__(83), React = __webpack_require__(146); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	var React = __webpack_require__(146);
	var TodoActions = __webpack_require__(250);

	var Footer = React.createClass({
	    displayName: 'Footer',


	    propTypes: {
	        allTodos: React.PropTypes.object.isRequired
	    },

	    render: function render() {

	        var allTodos = this.props.allTodos;
	        var total = 0;
	        if (allTodos) {
	            total = Object.keys(allTodos).length;
	        }

	        if (total === 0) {
	            return null;
	        }

	        var completed = 0;
	        for (var key in allTodos) {
	            if (allTodos[key].complete) {
	                completed++;
	            }
	        }

	        var itemsLeft = total - completed;
	        var itemsLeftPhrase = itemsLeft === 1 ? 'item ' : 'items ';
	        itemsLeftPhrase += 'left';

	        var clearCompletedButton = void 0;
	        if (completed) {
	            clearCompletedButton = React.createElement(
	                'button',
	                { id: 'clear-completed', onClick: this._onClearCompletedClick },
	                'Clear completed (',
	                completed,
	                ')'
	            );
	        }

	        return React.createElement(
	            'footer',
	            { id: 'footer' },
	            React.createElement(
	                'span',
	                { id: 'todo-count' },
	                React.createElement(
	                    'strong',
	                    null,
	                    itemsLeft
	                ),
	                ' ',
	                itemsLeftPhrase
	            ),
	            clearCompletedButton
	        );
	    },

	    _onClearCompletedClick: function _onClearCompletedClick() {
	        TodoActions.destroyCompleted();
	    }

	});

	module.exports = Footer;

	/* REACT HOT LOADER */ }).call(this); } finally { if (true) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(255); if (makeExportsHot(module, __webpack_require__(146))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "Footer.react.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))

/***/ },

/***/ 261:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(73), RootInstanceProvider = __webpack_require__(81), ReactMount = __webpack_require__(83), React = __webpack_require__(146); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	var React = __webpack_require__(146);
	var ReactPropTypes = React.PropTypes;
	var TodoActions = __webpack_require__(250);
	var TodoItem = __webpack_require__(262);

	var MainSection = React.createClass({
	    displayName: 'MainSection',


	    propTypes: {
	        allTodos: React.PropTypes.object.isRequired,
	        areAllComplete: ReactPropTypes.bool.isRequired
	    },

	    render: function render() {

	        if (Object.keys(this.props.allTodos).length < 1) {
	            return null;
	        }

	        var allTodos = this.props.allTodos;
	        var todos = [];

	        for (var key in allTodos) {
	            todos.push(React.createElement(TodoItem, { key: key, todo: allTodos[key] }));
	        }

	        return React.createElement(
	            'section',
	            { id: 'main' },
	            React.createElement('input', { id: 'toggle-all', type: 'checkbox',
	                onChange: this._onToggleCompleteAll,
	                checked: this.props.areAllComplete ? 'checked' : '' }),
	            React.createElement(
	                'label',
	                { htmlFor: 'toggle-all' },
	                'Mark all as complete'
	            ),
	            React.createElement(
	                'ul',
	                { id: 'todo-list' },
	                todos
	            )
	        );
	    },

	    _onToggleCompleteAll: function _onToggleCompleteAll() {
	        TodoActions.toggleCompleteAll();
	    }

	});

	module.exports = MainSection;

	/* REACT HOT LOADER */ }).call(this); } finally { if (true) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(255); if (makeExportsHot(module, __webpack_require__(146))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "MainSection.react.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))

/***/ },

/***/ 262:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(73), RootInstanceProvider = __webpack_require__(81), ReactMount = __webpack_require__(83), React = __webpack_require__(146); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	var React = __webpack_require__(146);
	var ReactPropTypes = React.PropTypes;
	var TodoActions = __webpack_require__(250);
	var TodoTextInput = __webpack_require__(259);

	// let cx = require('react/lib/cx');

	var TodoItem = React.createClass({
	    displayName: 'TodoItem',


	    propTypes: {
	        todo: ReactPropTypes.object.isRequired
	    },

	    getInitialState: function getInitialState() {
	        return {
	            isEditing: false
	        };
	    },

	    render: function render() {

	        var todo = this.props.todo;
	        var input = void 0;

	        if (this.state.isEditing) {
	            input = React.createElement(TodoTextInput, { className: 'edit',
	                onSave: this._onSave,
	                value: todo.text });
	        }

	        return React.createElement(
	            'li',
	            { className: 'aaa',
	                key: todo.id },
	            React.createElement(
	                'div',
	                { className: 'view' },
	                React.createElement('input', { className: 'toggle', type: 'checkbox', checked: todo.complete, onChange: this._onToggleComplete }),
	                React.createElement(
	                    'label',
	                    { onDoubleClick: this._onDoubleClick },
	                    todo.text
	                ),
	                React.createElement(
	                    'button',
	                    { className: 'destroy', onClick: this._onDestroyClick },
	                    'delete'
	                )
	            ),
	            input
	        );
	    },

	    _onToggleComplete: function _onToggleComplete() {
	        TodoActions.toggleComplete(this.props.todo);
	    },

	    _onDoubleClick: function _onDoubleClick() {
	        this.setState({
	            isEditing: true
	        });
	    },

	    _onSave: function _onSave() {

	        TodoActions.updateText(this.props.todo.id, text);
	        this.setState({
	            isEditing: false
	        });
	    },

	    _onDestroyClick: function _onDestroyClick() {
	        TodoActions.destroy(this.props.todo.id);
	    }

	});

	module.exports = TodoItem;

	/* REACT HOT LOADER */ }).call(this); } finally { if (true) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(255); if (makeExportsHot(module, __webpack_require__(146))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "TodoItem.react.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))

/***/ },

/***/ 263:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(73), RootInstanceProvider = __webpack_require__(81), ReactMount = __webpack_require__(83), React = __webpack_require__(146); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	var AppDispatcher = __webpack_require__(251);
	var EventEmitter = __webpack_require__(264).EventEmitter;
	var TodoConstants = __webpack_require__(258);
	var assign = __webpack_require__(95);

	var CHANGE_EVENT = 'change';
	var todos = {};

	function create(text) {
	    var id = (new Date() + Math.floor(Math.random() * 999999)).toString(36);
	    todos[id] = {
	        id: id,
	        complete: false,
	        text: text
	    };
	}

	function update(id, updates) {
	    todos[id] = assign({}, todos[id], updates);
	}

	function updateAll(updates) {
	    for (var id in todos) {
	        update(id, updates);
	    }
	}

	function destroy(id) {
	    delete todos[id];
	}

	function destroyCompleted() {
	    for (var id in todos) {
	        if (todos[id].complete) {
	            destroy(id);
	        }
	    }
	}

	var TodoStore = assign({}, EventEmitter.prototype, {

	    areAllComplete: function areAllComplete() {
	        for (var id in todos) {
	            if (!todos[id].complete) {
	                return false;
	            }
	        }
	        return true;
	    },

	    getAll: function getAll() {
	        return todos;
	    },

	    // emitChange: function() {
	    //     this.emit(CHANGE_EVENT);
	    // },

	    addChangeListener: function addChangeListener(callback) {
	        this.on(CHANGE_EVENT, callback);
	    },
	    removeChangeListener: function removeChangeListener(callback) {
	        this.removeListener(CHANGE_EVENT, callback);
	    }

	});

	function emitChange() {
	    TodoStore.emit(CHANGE_EVENT);
	}

	function handleAction(action) {

	    var text = void 0;

	    switch (action.actionType) {
	        case TodoConstants.TODO_CREATE:
	            text = action.text.trim();
	            if (text !== '') {
	                create(text);
	                emitChange();
	            }
	            break;
	        case TodoConstants.TODO_TOGGLE_COMPLETE_ALL:
	            if (TodoStore.areAllComplete()) {
	                updateAll({ complete: false });
	            } else {
	                updateAll({ complete: true });
	            }
	            emitChange();
	            break;
	        case TodoConstants.TODO_UNDO_COMPLETE:
	            update(action.id, { complete: false });
	            emitChange();
	            break;
	        case TodoConstants.TODO_COMPLETE:
	            update(action.id, { complete: true });
	            emitChange();
	            break;
	        case TodoConstants.TODO_UPDATE_TEXT:
	            text = action.text.trim();
	            if (text !== '') {
	                update(action.id, { text: text });
	                emitChange();
	            }
	            break;
	        case TodoConstants.TODO_DESTROY:
	            destroy(action.id);
	            emitChange();
	            break;
	        case TodoConstants.TODO_DESTROY_COMPLETED:
	            destroyCompleted();
	            emitChange();
	            break;
	        default:
	            break;
	    }
	}

	TodoStore.dispatchToken = AppDispatcher.register(handleAction);

	module.exports = TodoStore;

	/* REACT HOT LOADER */ }).call(this); } finally { if (true) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(255); if (makeExportsHot(module, __webpack_require__(146))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "TodoStore.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))

/***/ }

});